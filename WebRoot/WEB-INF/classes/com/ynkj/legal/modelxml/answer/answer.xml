<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="answer">
    <resultMap id="answerResult" class="com.ynkj.legal.model.answer.Answer">
		<result column="answer_id" property="answerId"  />
		<result column="question_id" property="questionId"/>
		<result column="answer_content" property="answerContent"/>
		<result column="add_time" property="addTime"/>
		<result column="agree_count" property="agreeCount"/>
		<result column="uid" property="uid"/>
		<result column="comment_count" property="commentCount"/>
		<result column="anonymous" property="anonymous"/>
		<result column="unverified_modify" property="unverifiedModify"/>
		<result column="verify_status" property="verifyStatus"/>
		<result column="status" property="status"/>
		<result column="delete_flag" property="deleteFlag"/>
		<result column="avatar_file" property="avatarFile"/>
		<result column="question_title" property="questionTitle"/>
		<result column="user_name" property="userName"/>
		<result column="followFlag" property="followFlag"/>
		<result column="praiseFlag" property="praiseFlag"/>
		<result column="one_word" property="oneWord"/>
		<result column="certify_status" property="certifyStatus"/>
		
	</resultMap>
    
    <sql id="queryWhere">
        <isNotEmpty prepend="and" property="status">
			status = #status#
		</isNotEmpty>
    </sql>
   
    <insert id="saveAnswer" parameterClass="com.ynkj.legal.model.answer.Answer">
    	INSERT INTO answer(answer_id,question_id,answer_content,add_time,uid,anonymous,unverified_modify,status)
    	VALUES(#answerId#,#questionId#,#answerContent#,#addTime#,#uid#,#anonymous#,#unverifiedModify#,#status#)
    </insert>
    
    <select id="countHomepageAnswer" resultClass="java.lang.Integer" parameterClass="java.util.Map">
			SELECT count(*) FROM answer a WHERE 1=1
			
			<isNotEmpty prepend="AND" property="answerId">
				a.answer_id=#answerId# 
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="publishedUid">
				a.uid=#publishedUid# 
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="questionId">
				a.question_id=#questionId# 
			</isNotEmpty>
			
			AND a.status=1 AND a.delete_flag = 0
				
	</select>
    
     <select id="getHomepageAnswer" resultMap="answerResult" parameterClass="java.util.Map">
			SELECT q.question_title,u.user_name,u.avatar_file,u.one_word,u.certify_status ,a.*,IF(ufa.user_id IS NULL ,0,1) followFlag,IF(upa.user_id IS NULL ,0,1) praiseFlag 
			FROM answer a 
			LEFT JOIN question q ON  a.question_id = q.question_id	
			LEFT JOIN question_topic qt  ON a.question_id = qt.question_id
			LEFT JOIN topic t ON qt.topic_id = t.topic_id 
			LEFT JOIN users u ON a.uid = u.user_id
			LEFT JOIN (SELECT user_id,answer_id FROM user_follow_answer WHERE user_id = #userId# AND status = 0) ufa 
			ON a.answer_id = ufa.answer_id
			LEFT JOIN (SELECT user_id,answer_id FROM user_praise_answer WHERE user_id = #userId# ) upa 
			ON a.answer_id = upa.answer_id  
			WHERE 1=1
			
			<isNotEmpty prepend="AND" property="followUserId">
				a.answer_id in (SELECT answer_id FROM user_follow_answer WHERE user_id = #followUserId# AND status = 0)
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="answerId">
				a.answer_id=#answerId# 
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="topicId">
				qt.topic_id=#topicId# 
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="followFlag">
				ufa.user_id IS NOT NULL
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="publishedUid">
				a.uid=#publishedUid# 
			</isNotEmpty>
			
			<isNotEmpty prepend="AND" property="questionId">
				q.question_id=#questionId# 
			</isNotEmpty>
			
			AND a.status=1 AND a.delete_flag = 0 AND q.delete_flag=0 GROUP BY a.answer_id 
			
			<isNotEmpty prepend="" property="Hot">
				ORDER BY a.agree_count DESC
			</isNotEmpty>
			
			<isNotEmpty prepend="" property="New">
				ORDER BY a.add_time DESC
			</isNotEmpty>
			
			<isNotEmpty prepend="" property="topicId">
				ORDER BY a.add_time DESC
			</isNotEmpty>
				
	</select>
	
	

    <update id="updateAnswerFollowCount" parameterClass="java.util.Map">
    	UPDATE answer SET follow_count = (SELECT count(*) FROM user_follow_answer 
			WHERE answer_id = #answerId# AND status = 0) WHERE answer_id = #answerId#
    </update>
    
     <update id="updateAnswerPraiseCount" parameterClass="java.util.Map">
    	 UPDATE answer SET agree_count = (SELECT count(*) FROM user_praise_answer 
			WHERE answer_id = #answerId# ) WHERE answer_id = #answerId#
    </update>
    
    <update id="updateAnswerCommentCount" parameterClass="java.util.Map">
    	 UPDATE answer SET comment_count = (SELECT count(*) FROM answer_comments 
			WHERE answer_id = #answerId# and delete_flag = 0 and verify_status = 1) 
		WHERE answer_id = #answerId#
    </update>
    
    
       <update id="addViewCount" parameterClass="java.util.Map">
    	UPDATE answer SET view_count = view_count+1 WHERE answer_id = #answerId#
    </update>
   
    
    <select id="queryCount" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		select count(*) from answer where delete_flag = 0
		<include refid="queryWhere"/>
	</select>
    
    <select id="query" resultMap="answerResult" parameterClass="java.util.Map">
		select * from answer where delete_flag = 0
		<include refid="queryWhere"/>
	</select>
    
    <select id="countUserPraiseAnswer" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT count(*) FROM user_praise_answer a LEFT JOIN users b ON a.user_id = b.user_id WHERE a.answer_id = #answerId#
	</select>
    
    <select id="queryUserPraiseAnswer" resultClass="java.util.HashMap" parameterClass="java.util.Map">
		SELECT b.user_id,b.user_name FROM user_praise_answer a LEFT JOIN users b ON a.user_id = b.user_id WHERE a.answer_id = #answerId#
	</select>
    
</sqlMap>